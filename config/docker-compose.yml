version: '3.8'

services:
  # Application FAF
  faf-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: faf-application
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/faf
      # Variables d'environnement à définir dans .env
      - SESSION_SECRET=${SESSION_SECRET}
      - LOGIN_ADMIN_USER=${LOGIN_ADMIN_USER}
      - LOGIN_ADMIN_PASS=${LOGIN_ADMIN_PASS}
      - FORM_ADMIN_NAME=${FORM_ADMIN_NAME}
      - APP_BASE_URL=${APP_BASE_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
    volumes:
      # Logs persistants
      - ./logs:/app/logs
      # Uploads temporaires (si besoin)
      - ./uploads:/app/uploads
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - faf-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => { process.exit(r.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Base de données MongoDB
  mongodb:
    image: mongo:7.0-jammy
    container_name: faf-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=faf
      - MONGODB_APP_PASSWORD=${MONGODB_APP_PASSWORD}
    # Ports supprimés en production pour la sécurité
    # Le port MongoDB n'est accessible qu'aux conteneurs internes
    volumes:
      # Données persistantes
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      # Script d'initialisation
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - faf-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Nginx comme reverse proxy (optionnel pour production)
  nginx:
    image: nginx:alpine
    container_name: faf-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - faf-app
    networks:
      - faf-network
    profiles:
      - production

# Réseaux
networks:
  faf-network:
    driver: bridge
    name: faf-network

# Volumes persistants
volumes:
  mongodb_data:
    name: faf-mongodb-data
  mongodb_config:
    name: faf-mongodb-config